apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '5'
    field.cattle.io/publicEndpoints: >-
      [{"addresses":["18.212.110.79","52.23.152.235","54.81.128.3"],"port":443,"protocol":"HTTPS","serviceName":"gitlab-o3s:gitlab-minio-svc","ingressName":"gitlab-o3s:gitlab-minio","hostname":"minio.rancher.pointertech.digital","path":"/","allNodes":false}]
    meta.helm.sh/release-name: gitlab
    meta.helm.sh/release-namespace: gitlab-o3s
  creationTimestamp: '2025-06-13T15:46:17Z'
  generation: 8
  labels:
    app: minio
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gitlab
    app.kubernetes.io/version: RELEASE.2017-12-28T01-21-00Z
    chart: minio-0.4.3
    heritage: Helm
    release: gitlab
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:chart: {}
            f:heritage: {}
            f:release: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/version: {}
                f:chart: {}
                f:component: {}
                f:heritage: {}
                f:release: {}
              f:name: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"minio"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"TZ"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/export"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/podinfo"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp/.minio"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"configure"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"TZ"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:runAsNonRoot: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/minio"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"export"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
                k:{"name":"minio-configuration"}:
                  .: {}
                  f:name: {}
                  f:projected:
                    .: {}
                    f:defaultMode: {}
                    f:sources: {}
                k:{"name":"minio-server-config"}:
                  .: {}
                  f:emptyDir:
                    .: {}
                    f:medium: {}
                  f:name: {}
                k:{"name":"podinfo"}:
                  .: {}
                  f:downwardAPI:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                  f:name: {}
      manager: helm
      operation: Update
      time: '2025-06-13T15:46:17Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:field.cattle.io/publicEndpoints: {}
      manager: agent
      operation: Update
      time: '2025-06-14T06:51:55Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: '2025-06-14T06:51:55Z'
  name: gitlab-minio
  namespace: gitlab-o3s
  resourceVersion: '2145526'
  uid: ae41cad8-9487-43d2-9123-000308ef65d6
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: minio
      component: app
      release: gitlab
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: minio
        app.kubernetes.io/name: gitlab
        app.kubernetes.io/version: RELEASE.2017-12-28T01-21-00Z
        chart: minio-0.4.3
        component: app
        heritage: Helm
        release: gitlab
      name: gitlab-minio
    spec:
      automountServiceAccountToken: false
      containers:
        - args:
            - '-C'
            - /tmp/.minio
            - '--quiet'
            - server
            - /export
          env:
            - name: TZ
              value: America/Sao_Paulo
          image: minio/minio:RELEASE.2017-12-28T01-21-00Z
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 9000
            timeoutSeconds: 1
          name: minio
          ports:
            - containerPort: 9000
              name: service
              protocol: TCP
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /export
              name: export
            - mountPath: /tmp/.minio
              name: minio-server-config
            - mountPath: /podinfo
              name: podinfo
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - sh
            - /config/configure
          env:
            - name: TZ
              value: America/Sao_Paulo
          image: registry.gitlab.com/gitlab-org/build/cng/gitlab-base:v18.0.2
          imagePullPolicy: IfNotPresent
          name: configure
          resources:
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              name: minio-configuration
            - mountPath: /minio
              name: minio-server-config
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      volumes:
        - downwardAPI:
            defaultMode: 420
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels
                path: labels
          name: podinfo
        - name: export
          persistentVolumeClaim:
            claimName: gitlab-minio
        - name: minio-configuration
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  name: gitlab-minio-config-cm
              - secret:
                  name: gitlab-minio-secret
        - emptyDir:
            medium: Memory
          name: minio-server-config
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: '2025-06-13T15:46:17Z'
      lastUpdateTime: '2025-06-14T00:52:26Z'
      message: ReplicaSet "gitlab-minio-77c8cf9b45" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: 'True'
      type: Progressing
    - lastTransitionTime: '2025-06-14T01:04:38Z'
      lastUpdateTime: '2025-06-14T01:04:38Z'
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: 'True'
      type: Available
  observedGeneration: 8
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
